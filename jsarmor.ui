<!-- interface layout
     paste into generate_layout.html to get jsarmor.html

     xml "macros" are used here to allow for a little bit of structure.
     They're nothing but custom tags with an associated definition stating
     what content to replace them with. Macros can use other macros, and
     can also take parameters: tag attributes are substituted in the output
     so it can be used for templating etc...
-->

<widgets>

<!-- main ui -->
<widget name="main">
<div id="main">
  <main_menu lazy></main_menu>
  <main_button/>
</div>
</widget>

<widget name="main_button" init>
  <div id="main_button" onmouseover onclick onmouseout>
    <button><img id="main_button_image"/></button>
  </div>
</widget>


<!-- main menu -->
<widget name="main_menu">
  <div id="main_menu" class="menu" onmouseout >
    <menu_title label="JSArmor" />
      <ul>
	<scope_widget/>
	<mode_menu_item mode="block_all" label="Block All" title="Block all scripts." />
	<block_all_settings lazy id="block_all_settings"></block_all_settings>
	<mode_menu_item mode="filtered" label="Filtered" 
		title="Select which scripts to run. (current site allowed by default, inline scripts always allowed.)" />
	<mode_menu_item mode="relaxed" label="Relaxed" 
		title="Select which scripts to run. (current site allowed by default, inline scripts always allowed.)" />
	<mode_menu_item mode="allow_all" label="Allow All" title="Allow everything…" />
	<menu_item id="details_item" label="Details…"/>
      </ul>
  </div>
</widget>

<widget name="block_all_settings">
  <block_inline_scripts id="block_inline_scripts"></block_inline_scripts>  
  <checkbox_item label="Pretend Javascript Disabled" id="handle_noscript_tags"
		 title="Interpret noscript tags as if javascript was disabled in opera."
		 state="`handle_noscript_tags"
		 callback="`toggle_handle_noscript_tags"/></checkbox_item>
</widget>

<widget name="block_inline_scripts" >
  <li>
    <input type="checkbox"/>Block Inline Scripts
    <div class="right_item">[-2k]</div>
  </li>
</widget>


<widget name="checkbox_item" title innerText state callback init>
  <li title="title">
    <input type="checkbox"/>
  </li>
</widget>




<widget name="host_table">
  <table id="jsarmor_ftable"></table>
</widget>

<widget name="host_table_row">
  <tr class="active">
    <td width="1%">&nbsp;&nbsp;</td>
    <td width="1%"></td>
    <td width="1%">
      <input type="checkbox" checked="true">
    </td>
    <td width="1%" class="host_part">code.</td>
    <td class="domain_part">jquery.com</td>
    <td width="1%"></td>
    <td width="1%" class="not_allowed_globally"></td>
    <td width="1%" class="script_count">[1]</td>
  </tr>
</widget>


<!--         [ low level building blocks ]         -->
 
<def menu_title label >
  <h1 id="title" oninit="menu_title_init">$label</h1>
</def>

<def menu_item id label >
  <li id="$id">$label</li>
</def>

<def mode_menu_item mode label title >
  <li class="$mode" title="$title">$label</li>
</def>

<def scope_widget>
  <li id="scope" oninit="init_scope_buttons">Set for:
    <radio_button label="Page"/>
    <radio_button label="Site"/>
    <radio_button label="Domain"/>
    <radio_button label="Global"/>
  </li>
</def>


<def radio_button label >
  <input type="radio" name="radio"/>
  <label> $label </label>
</def>



</widgets>
