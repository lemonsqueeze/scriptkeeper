<def comment>
<!-- interface layout
     paste into generate_layout.html to get jsarmor.html

     html tag "macros" are used here to allow for a little bit of structure.
     They're nothing but custom tags with an associated content to replace
     them with. Macros can use other macros, and can also take parameters:
     tag attributes are substituted in the output so it can be used for
     templating etc...
--></def>


<!-- main ui -->
<div id="main" class="menu_parent">
  <div id="main_button" >
    <button><img></button>
  </div>
</div>


<!-- main menu -->
<div id="main_menu" class="menu" >
  <menu_title label="JSArmor">
  <ul>
    <scope>
    <mode_menu_item mode="block_all" label="Block All" title="Block all scripts." >
    <mode_menu_item mode="filtered" label="Filtered" title="Select which scripts to run. (current site allowed by default, inline scripts always allowed.)" >
    <mode_menu_item mode="relaxed" label="Relaxed" title="Select which scripts to run. (current site allowed by default, inline scripts always allowed.)" >
    <mode_menu_item mode="allow_all" label="Allow All" title="Allow everything…" >
    <menu_item id="details_item" label="Details…">
  </ul>
</div>


<!-------------------------------------- low level building blocks ---------------------------------------->

<def menu_title label ><!--
  <h1 id="title">{label}</h1>
--></def>

<def menu_item id label ><!--
  <li id="{id}">{label}</li>
--></def>

<def mode_menu_item mode label title ><!--
  <li class="{mode}" title="{title}">{label}</li>
--></def>

<def scope><!--
  <li id="scope">Set for:
    <radio_button label="Page">
    <radio_button label="Site">
    <radio_button label="Domain">
    <radio_button label="Global">
  </li>
--></def>

<def radio_button label ><!--
  <input type="radio" name="radio_group"><label> {label} </label>
--></def>

